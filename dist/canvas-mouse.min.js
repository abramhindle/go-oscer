/*
	canvas-mouse ver 0.1.0 beta
	Copyright (c) 2017 Epistemex
	www.epistemex.com
*/
function CanvasMouse(b,g){if(!(b instanceof CanvasRenderingContext2D)){throw"context must be a 2D canvas context."}var f=this,h;g=Object.assign({level:"basic",matrix:null},g);var e=Math.max(0,["basic","scale","transforms"].indexOf(g.level));var c=(b.currentTransform||b.mozCurrentTransform||null);this.context=b;this.canvas=b.canvas;this.matrix=g.matrix;this.deltaX=0;this.deltaY=0;this.scaleX=1;this.scaleY=1;if(e===2&&!c){if(this.matrix){e=3}else{console.log('Warning: this browser does not support context.currentTransform(). Using "scale" instead.');e=1}}this.getPos=[this.callbackBasic,this.callbackScale,this.callbackTransforms,this.callbackTransforms2][e];this.pl=0;this.pt=0;this.init=d;this.update=i;function d(s){var y=canvas.getBoundingClientRect(),r=getComputedStyle(canvas),w=r.getPropertyValue.bind(r),k="padding-",j="border-",l="-width",u=parseInt(w(k+"left")),v=parseInt(w(k+"right")),x=parseInt(w(k+"top")),t=parseInt(w(k+"bottom")),n=parseInt(w(j+"left"+l)),p=parseInt(w(j+"right"+l)),q=parseInt(w(j+"top"+l)),m=parseInt(w(j+"bottom"+l));s.pl=u+n;s.pt=x+q;s.deltaX=y.left+u+n;s.deltaY=y.top+x+q;s.scaleX=canvas.width/(y.width-u-v-n-p);s.scaleY=canvas.height/(y.height-x-t-q-m)}function i(){var j=canvas.getBoundingClientRect();f.deltaX=j.left+f.pl;f.deltaY=j.top+f.pt}window.addEventListener("scroll",a);window.addEventListener("resize",a);function a(){cancelAnimationFrame(h);h=requestAnimationFrame(i)}d(this)}CanvasMouse.prototype={callbackBasic:function(a){return{x:a.clientX-this.deltaX,y:a.clientY-this.deltaY}},callbackScale:function(a){return{x:(a.clientX-this.deltaX)*this.scaleX,y:(a.clientY-this.deltaY)*this.scaleY}},callbackTransforms:function(c){var g,f,a,d,b=this.context;g=this.callbackScale(c);a=(b.currentTransform||b.mozCurrentTransform);if(a instanceof SVGMatrix){a=DOMMatrix.fromMatrix(a)}f=typeof a.a==="undefined"?new DOMMatrix(a):a;d=f.invertSelf();return{x:g.x*d.a+g.y*d.c+d.e,y:g.x*d.b+g.y*d.d+d.f}},callbackTransforms2:function(a){var b=this.callbackScale(a);return this.matrix.inverse().applyToPoint(b.x,b.y)},getPosXY:function(a,b){return this.getPos({clientX:a/this.scaleX+this.deltaX,clientY:b/this.scaleY+this.deltaY})}};